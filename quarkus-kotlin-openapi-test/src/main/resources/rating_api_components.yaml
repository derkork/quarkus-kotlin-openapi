components:
  schemas:
    Id:
      type: string
      format: uuid


    Score:
      type: number
      format: double
      minimum: 1
      maximum: 10

    IdAware:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
      required:
        - id


    Rating:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
          readOnly: true
        source:
          type:
            - string
        score:
          $ref: "#/components/schemas/Score"
      required:
       # this will be patched in
       # - source
        - score
        - id

    MovieRating:
      type: object
      allOf:
        - $ref: "#/components/schemas/IdAware"
        - properties:
            totalScore:
              $ref: "#/components/schemas/Score"
            ratings:
              type:
                - array
              items:
                $ref: "#/components/schemas/Rating"
          required:
            - ratings

    InvalidInputError:
      type: object
      properties:
        errors:
          type:
            - array
          items:
            type:
              - string
      required:
        - errors

    ApplicationError:
      type: object
      properties:
        message:
          type: string
      required:
        - message

  parameters:
    # referenced like this on path or method level
    # parameters:
    #   - $ref: "#/components/parameters/MovieId"
    MovieId:
      name: movieId
      in: path
      description: movieId
      required: true
      schema:
        $ref: "#/components/schemas/Id"

  responses:
    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidInputError"


