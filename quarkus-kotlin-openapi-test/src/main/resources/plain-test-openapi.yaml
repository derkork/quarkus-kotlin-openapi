openapi: 3.1.0
info:
  title: Test-Suit
  version: 1.0.0
  description: fragment of the overall test suit

paths:
  /features/plain/bigIntegerType:
    post:
      tags:
        - plain
      operationId: plainBigIntegerType
      parameters:
        - name: param
          in: query
          schema:
            type: integer
      requestBody:
        content:
          text/plain:
            schema:
              type: integer
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: integer
                  bodyValue:
                    type: integer
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/integerType:
    post:
      tags:
        - plain
      operationId: plainIntegerType
      parameters:
        - name: param
          in: query
          schema:
            type: number
            format: int32
      requestBody:
        content:
          text/plain:
            schema:
              type: number
              format: int32
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: number
                    format: int32
                  bodyValue:
                    type: number
                    format: int32
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/bigDecimalType:
    post:
      tags:
        - plain
      operationId: plainBigDecimalType
      parameters:
        - name: param
          in: query
          schema:
            type: number
      requestBody:
        content:
          text/plain:
            schema:
              type: number
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: number
                  bodyValue:
                    type: number
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/floatingType:
    post:
      tags:
        - plain
      operationId: plainFloatingType
      parameters:
        - name: param
          in: query
          schema:
            type: number
            format: float
      requestBody:
        content:
          text/plain:
            schema:
              type: number
              format: float
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: number
                    format: float
                  bodyValue:
                    type: number
                    format: float
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/booleanType:
    post:
      tags:
        - plain
      operationId: plainBooleanType
      parameters:
        - name: param
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          text/plain:
            schema:
              type: boolean
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: boolean
                  bodyValue:
                    type: boolean
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/stringType:
    post:
      tags:
        - plain
      operationId: plainStringType
      parameters:
        - name: param
          in: query
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    type: string
                  bodyValue:
                    type: string
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/plain/enumType:
    post:
      tags:
        - plain
      operationId: plainEnumType
      parameters:
        - name: param
          in: query
          schema:
            $ref: '#/components/schemas/PlainEnum'
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/PlainEnum'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameterValue:
                    $ref: '#/components/schemas/PlainEnum'
                  bodyValue:
                    $ref: '#/components/schemas/PlainEnum'
        '400':
          $ref: '#/components/responses/OperationError400'

components:

  schemas:
    PlainEnum:
      type: number
      format: int32
      enum:
        - 1
        - 2
        - 4
        - 8
      x-enum-item-names:
        # only some items have a customized label
        1: One
        4: Four

    OperationError:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
      required:
        - messages

  responses:
    OperationError400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationError'
