openapi: 3.1.0
info:
  title: Test-Suit
  version: 1.0.0
  description: fragment of the overall test suit

paths:
  /features/generic/unknownStatusCode:
    get:
      # jakarta.ws.rs.core.Response.Status doesn't have a mapping for status code 422. So we check, that we still
      # generate valid code
      tags:
        - generic
      operationId: unknownStatusCode
      responses:
        '422':
          description: Unprocessable entity

  /features/generic/responseCode/{responseCodeHint}:
    get:
      # Check that different response codes are possible. Codes without a matching response are send via the generic
      # status response
      tags:
        - generic
      operationId: responseCode
      parameters:
        - name: responseCodeHint
          in: path
          schema:
            $ref: '#/components/schemas/ResponseCodeHint'
      responses:
        200:
          description: Ok
        400:
          # don't use the OperationError here
          description: Bad request

  /features/generic/responseCodeWithDefault/{responseCodeHint}:
    get:
      # Check that different response codes are possible. Codes without a matching response are send via the default
      # response
      tags:
        - generic
      operationId: responseCodeWithDefault
      parameters:
        - name: responseCodeHint
          in: path
          schema:
            $ref: '#/components/schemas/ResponseCodeHint'
      responses:
        200:
          description: Ok
        400:
          # don't use the OperationError here
          description: Bad request
        default:
          description: default

  /features/generic/responseWithInterface:
    get:
      # Check that interfaces can be generated for common responses
      tags:
        - generic
      operationId: responseWithInterface
      responses:
        200:
          description: Ok
        400:
          # don't use the OperationError here
          description: Bad request
          x-generic-response-name: Shared400Response
          headers:
            X-TEST:
              schema:
                type: string
                default: "test"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationError'


  /features/generic/echo:
    post:
      tags:
        - generic
      operationId: echo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EchoMessage'
        required: true
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoMessage'
        400:
          $ref: '#/components/responses/OperationError400'

  /features/misc/objectExtensionTest:
    get:
      tags:
        - generic
      operationId: objectExtensionTest
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseObjectExtension'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseObject'

  /features/split/test1:
    post:
      tags:
        - generic
      operationId: splitTest1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndirectSplit'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndirectSplit'
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/split/test2:
    post:
      tags:
        - generic
      operationId: splitTest2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyObject'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyObject'
        '400':
          $ref: '#/components/responses/OperationError400'

  /features/rawHeaders:
    get:
      tags:
        - generic
      operationId: rawHeaders
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  missingSingleValueHeader:
                    type: string
                  missingMultiValueHeader:
                    type: array
                    items:
                      type: string
                  singleValueHeader:
                    type: string
                  multiValueHeader:
                    type: array
                    items:
                      type: string

components:

  schemas:
    ResponseCodeHint:
      type: number
      format: int32
      enum:
        - 200
        - 204
        - 400
        - 404
      x-enum-item-names:
        200: Ok
        204: NoContent
        400: BadRequest
        404: NotFound

    EchoMessage:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    BaseObject:
      properties:
        prop1:
          type: string
        prop2:
          type: string
      required:
        - prop1

    BaseObjectExtension:
      $ref: '#/components/schemas/BaseObject'
      required:
        - prop2

    ReadOnlyType:
      type: string
      readOnly: true

    ObjectWithReadOnlyProperty:
      type: object
      properties:
        readOnlyProperty:
          $ref: '#/components/schemas/ReadOnlyType'
        normalProperty:
          type: string
      required:
        - readOnlyProperty
        - normalProperty

    IndirectSplit:
      type: 'null'
      $ref: '#/components/schemas/ObjectWithReadOnlyProperty'

    ReadOnlyObject:
      type: object
      properties:
        readOnlyProperty:
          type: string
          readOnly: true
        normalProperty:
          type: string
      required:
        - readOnlyProperty
        - normalProperty

    WriteOnlyObject:
      type: object
      properties:
        writeOnlyProperty:
          type: string
          writeOnly: true
        normalProperty:
          type: string
      required:
        - writeOnlyProperty
        - normalProperty

    OperationError:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
      required:
        - messages

  responses:
    OperationError400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationError'
